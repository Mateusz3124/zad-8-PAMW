@page "/products/editbook/{Id:int}"
@using Blazored.LocalStorage;
@inject IBookService ProductService
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorageService

<h3>Edit Product</h3>

@if (book == null)
{
    <p><em>@message</em></p>
}
else
{
    <BookForm book="book" OnValidSubmit="HandleValidSubmit"></BookForm>
    <button class="btn btn-danger" @onclick=HandleDelete>Delete</button>
}



@code {
    [Parameter]
    public int Id { get; set; }

    private Book book;
    private string message = "Loading product...";

    protected override async Task OnInitializedAsync()
    {
        string authToken = await LocalStorageService.GetItemAsStringAsync("authToken");
        var response = await ProductService.ReadBooksAsync(authToken);
        if (response.Success)
        {
            foreach (Book book in response.Data)
            {
                if (book.Id == Id)
                {
                    this.book = book;
                    break;
                }
            }
        }
        else
            message = response.Message;
    }

    async Task HandleValidSubmit()
    {
        var response = await ProductService.UpdateBookAsync(book);
        if (response.Success)
            NavigationManager.NavigateTo("/products/bookList");
        else
            message = response.Message;
    }

    async Task HandleDelete()
    {
        var response = await ProductService.DeleteBookAsync(Id);
        if (response.Success)
            NavigationManager.NavigateTo("/products/bookList");
        else
            message = response.Message;
    }
}