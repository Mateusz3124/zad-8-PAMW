{
  "swagger": "2.0",
  "info": {
    "title": "P05Shop.API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
    "version": "1.0"
  },
  "paths": {
    "/api/Book/ReadBooks": {
      "get": {
        "tags": [
          "Book"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BookListServiceResponse"
            }
          }
        }
      }
    },
    "/api/Book/createBook": {
      "post": {
        "tags": [
          "Book"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BookListServiceResponse"
            }
          }
        }
      }
    },
    "/api/Book/DeleteBook/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BookListServiceResponse"
            }
          }
        }
      }
    },
    "/api/Book/UpdateBook": {
      "put": {
        "tags": [
          "Book"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BookListServiceResponse"
            }
          }
        }
      }
    },
    "/api/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProductListServiceResponse"
            }
          }
        }
      }
    },
    "/api/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeatherForecast"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WeatherForecast"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/City"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/WeatherForecast/onlyTwo": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeatherForecast"
              }
            }
          }
        }
      }
    },
    "/api/WeatherForecast/search": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "number",
            "type": "integer",
            "format": "int32",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WeatherForecast"
              }
            }
          }
        }
      }
    },
    "/api/WeatherForecast/test/{routeParam}": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "number",
            "type": "integer",
            "format": "int32",
            "collectionFormat": "multi"
          },
          {
            "in": "path",
            "name": "routeParam",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/WeatherForecast/filter": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cityName",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "country",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/WeatherForecast/filterComplicated": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Version",
            "type": "integer",
            "format": "int32",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "Key",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "Type",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "Rank",
            "type": "integer",
            "format": "int32",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "LocalizedName",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "Country.ID",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "Country.LocalizedName",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "AdministrativeArea.ID",
            "type": "string",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "AdministrativeArea.LocalizedName",
            "type": "string",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/WeatherForecast/newCity": {
      "post": {
        "tags": [
          "WeatherForecast"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/City"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/WeatherForecast/addCity": {
      "post": {
        "tags": [
          "WeatherForecast"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/City"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/WeatherForecast/GetCity/{id}": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/WeatherForecast/MyDynamicMethodName": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "definitions": {
    "AdministrativeArea": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "localizedName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Book": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BookListServiceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Book"
          }
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "codeError": {
          "format": "int32",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "City": {
      "type": "object",
      "properties": {
        "version": {
          "format": "int32",
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "localizedName": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/Country"
        },
        "administrativeArea": {
          "$ref": "#/definitions/AdministrativeArea"
        }
      },
      "additionalProperties": false
    },
    "Country": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "localizedName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DateOnly": {
      "type": "object",
      "properties": {
        "year": {
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "format": "int32",
          "type": "integer"
        },
        "dayOfWeek": {
          "$ref": "#/definitions/DayOfWeek"
        },
        "dayOfYear": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "dayNumber": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "DayOfWeek": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "type": "integer"
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ProductListServiceResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "codeError": {
          "format": "int32",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "WeatherForecast": {
      "type": "object",
      "properties": {
        "date": {
          "$ref": "#/definitions/DateOnly"
        },
        "temperatureC": {
          "format": "int32",
          "type": "integer"
        },
        "temperatureF": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "summary": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}